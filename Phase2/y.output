Terminals unused in grammar

    VOID
    AND
    OR


Grammar

    0 $accept: program $end

    1 program: headers main_function

    2 headers: ε
    3        | headers INCLUDE

    4 main_function: INT ID '(' ')' '{' body return_stmt '}'

    5 body: ε
    6     | body statement

    7 statement: declaration ';'
    8          | assignment ';'
    9          | print_stmt ';'
   10          | scan_stmt ';'
   11          | for_loop
   12          | if_stmt

   13 declaration: type ID
   14            | type ID '=' expression

   15 type: INT
   16     | FLOAT
   17     | CHAR

   18 assignment: ID '=' expression
   19           | ID UNARY
   20           | UNARY ID

   21 expression: NUMBER
   22           | FLOAT_NUM
   23           | CHARACTER
   24           | ID
   25           | expression ADD expression
   26           | expression SUBTRACT expression
   27           | expression MULTIPLY expression
   28           | expression DIVIDE expression

   29 print_stmt: PRINTFF '(' STR ')'

   30 scan_stmt: SCANFF '(' STR ',' '&' ID ')'

   31 for_loop: FOR '(' assignment ';' condition ';' assignment ')' '{' body '}'

   32 if_stmt: IF '(' condition ')' '{' body '}' else_part

   33 else_part: ε
   34          | ELSE '{' body '}'

   35 condition: expression comp_op expression
   36          | TRUE
   37          | FALSE

   38 comp_op: LT
   39        | GT
   40        | LE
   41        | GE
   42        | EQ
   43        | NE

   44 return_stmt: RETURN expression ';'
   45            | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 30
    '(' (40) 4 29 30 31 32
    ')' (41) 4 29 30 31 32
    ',' (44) 30
    ';' (59) 7 8 9 10 31 44
    '=' (61) 14 18
    '{' (123) 4 31 32 34
    '}' (125) 4 31 32 34
    error (256)
    VOID (258)
    CHARACTER (259) 23
    PRINTFF (260) 29
    SCANFF (261) 30
    INT (262) 4 15
    FLOAT (263) 16
    CHAR (264) 17
    FOR (265) 31
    IF (266) 32
    ELSE (267) 34
    TRUE (268) 36
    FALSE (269) 37
    NUMBER (270) 21
    FLOAT_NUM (271) 22
    ID (272) 4 13 14 18 19 20 24 30
    LE (273) 40
    GE (274) 41
    EQ (275) 42
    NE (276) 43
    GT (277) 39
    LT (278) 38
    AND (279)
    OR (280)
    STR (281) 29 30
    ADD (282) 25
    MULTIPLY (283) 27
    DIVIDE (284) 28
    SUBTRACT (285) 26
    UNARY (286) 19 20
    INCLUDE (287) 3
    RETURN (288) 44


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1
        on right: 0
    headers (44)
        on left: 2 3
        on right: 1 3
    main_function (45)
        on left: 4
        on right: 1
    body (46)
        on left: 5 6
        on right: 4 6 31 32 34
    statement (47)
        on left: 7 8 9 10 11 12
        on right: 6
    declaration (48)
        on left: 13 14
        on right: 7
    type (49)
        on left: 15 16 17
        on right: 13 14
    assignment (50)
        on left: 18 19 20
        on right: 8 31
    expression (51)
        on left: 21 22 23 24 25 26 27 28
        on right: 14 18 25 26 27 28 35 44
    print_stmt (52)
        on left: 29
        on right: 9
    scan_stmt (53)
        on left: 30
        on right: 10
    for_loop (54)
        on left: 31
        on right: 11
    if_stmt (55)
        on left: 32
        on right: 12
    else_part (56)
        on left: 33 34
        on right: 32
    condition (57)
        on left: 35 36 37
        on right: 31 32
    comp_op (58)
        on left: 38 39 40 41 42 43
        on right: 35
    return_stmt (59)
        on left: 44 45
        on right: 4


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (headers)

    program  go to state 1
    headers  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: headers • main_function
    3 headers: headers • INCLUDE

    INT      shift, and go to state 4
    INCLUDE  shift, and go to state 5

    main_function  go to state 6


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 main_function: INT • ID '(' ')' '{' body return_stmt '}'

    ID  shift, and go to state 7


State 5

    3 headers: headers INCLUDE •

    $default  reduce using rule 3 (headers)


State 6

    1 program: headers main_function •

    $default  reduce using rule 1 (program)


State 7

    4 main_function: INT ID • '(' ')' '{' body return_stmt '}'

    '('  shift, and go to state 8


State 8

    4 main_function: INT ID '(' • ')' '{' body return_stmt '}'

    ')'  shift, and go to state 9


State 9

    4 main_function: INT ID '(' ')' • '{' body return_stmt '}'

    '{'  shift, and go to state 10


State 10

    4 main_function: INT ID '(' ')' '{' • body return_stmt '}'

    $default  reduce using rule 5 (body)

    body  go to state 11


State 11

    4 main_function: INT ID '(' ')' '{' body • return_stmt '}'
    6 body: body • statement

    PRINTFF  shift, and go to state 12
    SCANFF   shift, and go to state 13
    INT      shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    FOR      shift, and go to state 17
    IF       shift, and go to state 18
    ID       shift, and go to state 19
    UNARY    shift, and go to state 20
    RETURN   shift, and go to state 21

    $default  reduce using rule 45 (return_stmt)

    statement    go to state 22
    declaration  go to state 23
    type         go to state 24
    assignment   go to state 25
    print_stmt   go to state 26
    scan_stmt    go to state 27
    for_loop     go to state 28
    if_stmt      go to state 29
    return_stmt  go to state 30


State 12

   29 print_stmt: PRINTFF • '(' STR ')'

    '('  shift, and go to state 31


State 13

   30 scan_stmt: SCANFF • '(' STR ',' '&' ID ')'

    '('  shift, and go to state 32


State 14

   15 type: INT •

    $default  reduce using rule 15 (type)


State 15

   16 type: FLOAT •

    $default  reduce using rule 16 (type)


State 16

   17 type: CHAR •

    $default  reduce using rule 17 (type)


State 17

   31 for_loop: FOR • '(' assignment ';' condition ';' assignment ')' '{' body '}'

    '('  shift, and go to state 33


State 18

   32 if_stmt: IF • '(' condition ')' '{' body '}' else_part

    '('  shift, and go to state 34


State 19

   18 assignment: ID • '=' expression
   19           | ID • UNARY

    UNARY  shift, and go to state 35
    '='    shift, and go to state 36


State 20

   20 assignment: UNARY • ID

    ID  shift, and go to state 37


State 21

   44 return_stmt: RETURN • expression ';'

    CHARACTER  shift, and go to state 38
    NUMBER     shift, and go to state 39
    FLOAT_NUM  shift, and go to state 40
    ID         shift, and go to state 41

    expression  go to state 42


State 22

    6 body: body statement •

    $default  reduce using rule 6 (body)


State 23

    7 statement: declaration • ';'

    ';'  shift, and go to state 43


State 24

   13 declaration: type • ID
   14            | type • ID '=' expression

    ID  shift, and go to state 44


State 25

    8 statement: assignment • ';'

    ';'  shift, and go to state 45


State 26

    9 statement: print_stmt • ';'

    ';'  shift, and go to state 46


State 27

   10 statement: scan_stmt • ';'

    ';'  shift, and go to state 47


State 28

   11 statement: for_loop •

    $default  reduce using rule 11 (statement)


State 29

   12 statement: if_stmt •

    $default  reduce using rule 12 (statement)


State 30

    4 main_function: INT ID '(' ')' '{' body return_stmt • '}'

    '}'  shift, and go to state 48


State 31

   29 print_stmt: PRINTFF '(' • STR ')'

    STR  shift, and go to state 49


State 32

   30 scan_stmt: SCANFF '(' • STR ',' '&' ID ')'

    STR  shift, and go to state 50


State 33

   31 for_loop: FOR '(' • assignment ';' condition ';' assignment ')' '{' body '}'

    ID     shift, and go to state 19
    UNARY  shift, and go to state 20

    assignment  go to state 51


State 34

   32 if_stmt: IF '(' • condition ')' '{' body '}' else_part

    CHARACTER  shift, and go to state 38
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NUMBER     shift, and go to state 39
    FLOAT_NUM  shift, and go to state 40
    ID         shift, and go to state 41

    expression  go to state 54
    condition   go to state 55


State 35

   19 assignment: ID UNARY •

    $default  reduce using rule 19 (assignment)


State 36

   18 assignment: ID '=' • expression

    CHARACTER  shift, and go to state 38
    NUMBER     shift, and go to state 39
    FLOAT_NUM  shift, and go to state 40
    ID         shift, and go to state 41

    expression  go to state 56


State 37

   20 assignment: UNARY ID •

    $default  reduce using rule 20 (assignment)


State 38

   23 expression: CHARACTER •

    $default  reduce using rule 23 (expression)


State 39

   21 expression: NUMBER •

    $default  reduce using rule 21 (expression)


State 40

   22 expression: FLOAT_NUM •

    $default  reduce using rule 22 (expression)


State 41

   24 expression: ID •

    $default  reduce using rule 24 (expression)


State 42

   25 expression: expression • ADD expression
   26           | expression • SUBTRACT expression
   27           | expression • MULTIPLY expression
   28           | expression • DIVIDE expression
   44 return_stmt: RETURN expression • ';'

    ADD       shift, and go to state 57
    MULTIPLY  shift, and go to state 58
    DIVIDE    shift, and go to state 59
    SUBTRACT  shift, and go to state 60
    ';'       shift, and go to state 61


State 43

    7 statement: declaration ';' •

    $default  reduce using rule 7 (statement)


State 44

   13 declaration: type ID •
   14            | type ID • '=' expression

    '='  shift, and go to state 62

    $default  reduce using rule 13 (declaration)


State 45

    8 statement: assignment ';' •

    $default  reduce using rule 8 (statement)


State 46

    9 statement: print_stmt ';' •

    $default  reduce using rule 9 (statement)


State 47

   10 statement: scan_stmt ';' •

    $default  reduce using rule 10 (statement)


State 48

    4 main_function: INT ID '(' ')' '{' body return_stmt '}' •

    $default  reduce using rule 4 (main_function)


State 49

   29 print_stmt: PRINTFF '(' STR • ')'

    ')'  shift, and go to state 63


State 50

   30 scan_stmt: SCANFF '(' STR • ',' '&' ID ')'

    ','  shift, and go to state 64


State 51

   31 for_loop: FOR '(' assignment • ';' condition ';' assignment ')' '{' body '}'

    ';'  shift, and go to state 65


State 52

   36 condition: TRUE •

    $default  reduce using rule 36 (condition)


State 53

   37 condition: FALSE •

    $default  reduce using rule 37 (condition)


State 54

   25 expression: expression • ADD expression
   26           | expression • SUBTRACT expression
   27           | expression • MULTIPLY expression
   28           | expression • DIVIDE expression
   35 condition: expression • comp_op expression

    LE        shift, and go to state 66
    GE        shift, and go to state 67
    EQ        shift, and go to state 68
    NE        shift, and go to state 69
    GT        shift, and go to state 70
    LT        shift, and go to state 71
    ADD       shift, and go to state 57
    MULTIPLY  shift, and go to state 58
    DIVIDE    shift, and go to state 59
    SUBTRACT  shift, and go to state 60

    comp_op  go to state 72


State 55

   32 if_stmt: IF '(' condition • ')' '{' body '}' else_part

    ')'  shift, and go to state 73


State 56

   18 assignment: ID '=' expression •
   25 expression: expression • ADD expression
   26           | expression • SUBTRACT expression
   27           | expression • MULTIPLY expression
   28           | expression • DIVIDE expression

    ADD       shift, and go to state 57
    MULTIPLY  shift, and go to state 58
    DIVIDE    shift, and go to state 59
    SUBTRACT  shift, and go to state 60

    $default  reduce using rule 18 (assignment)


State 57

   25 expression: expression ADD • expression

    CHARACTER  shift, and go to state 38
    NUMBER     shift, and go to state 39
    FLOAT_NUM  shift, and go to state 40
    ID         shift, and go to state 41

    expression  go to state 74


State 58

   27 expression: expression MULTIPLY • expression

    CHARACTER  shift, and go to state 38
    NUMBER     shift, and go to state 39
    FLOAT_NUM  shift, and go to state 40
    ID         shift, and go to state 41

    expression  go to state 75


State 59

   28 expression: expression DIVIDE • expression

    CHARACTER  shift, and go to state 38
    NUMBER     shift, and go to state 39
    FLOAT_NUM  shift, and go to state 40
    ID         shift, and go to state 41

    expression  go to state 76


State 60

   26 expression: expression SUBTRACT • expression

    CHARACTER  shift, and go to state 38
    NUMBER     shift, and go to state 39
    FLOAT_NUM  shift, and go to state 40
    ID         shift, and go to state 41

    expression  go to state 77


State 61

   44 return_stmt: RETURN expression ';' •

    $default  reduce using rule 44 (return_stmt)


State 62

   14 declaration: type ID '=' • expression

    CHARACTER  shift, and go to state 38
    NUMBER     shift, and go to state 39
    FLOAT_NUM  shift, and go to state 40
    ID         shift, and go to state 41

    expression  go to state 78


State 63

   29 print_stmt: PRINTFF '(' STR ')' •

    $default  reduce using rule 29 (print_stmt)


State 64

   30 scan_stmt: SCANFF '(' STR ',' • '&' ID ')'

    '&'  shift, and go to state 79


State 65

   31 for_loop: FOR '(' assignment ';' • condition ';' assignment ')' '{' body '}'

    CHARACTER  shift, and go to state 38
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NUMBER     shift, and go to state 39
    FLOAT_NUM  shift, and go to state 40
    ID         shift, and go to state 41

    expression  go to state 54
    condition   go to state 80


State 66

   40 comp_op: LE •

    $default  reduce using rule 40 (comp_op)


State 67

   41 comp_op: GE •

    $default  reduce using rule 41 (comp_op)


State 68

   42 comp_op: EQ •

    $default  reduce using rule 42 (comp_op)


State 69

   43 comp_op: NE •

    $default  reduce using rule 43 (comp_op)


State 70

   39 comp_op: GT •

    $default  reduce using rule 39 (comp_op)


State 71

   38 comp_op: LT •

    $default  reduce using rule 38 (comp_op)


State 72

   35 condition: expression comp_op • expression

    CHARACTER  shift, and go to state 38
    NUMBER     shift, and go to state 39
    FLOAT_NUM  shift, and go to state 40
    ID         shift, and go to state 41

    expression  go to state 81


State 73

   32 if_stmt: IF '(' condition ')' • '{' body '}' else_part

    '{'  shift, and go to state 82


State 74

   25 expression: expression • ADD expression
   25           | expression ADD expression •
   26           | expression • SUBTRACT expression
   27           | expression • MULTIPLY expression
   28           | expression • DIVIDE expression

    MULTIPLY  shift, and go to state 58
    DIVIDE    shift, and go to state 59

    $default  reduce using rule 25 (expression)


State 75

   25 expression: expression • ADD expression
   26           | expression • SUBTRACT expression
   27           | expression • MULTIPLY expression
   27           | expression MULTIPLY expression •
   28           | expression • DIVIDE expression

    $default  reduce using rule 27 (expression)


State 76

   25 expression: expression • ADD expression
   26           | expression • SUBTRACT expression
   27           | expression • MULTIPLY expression
   28           | expression • DIVIDE expression
   28           | expression DIVIDE expression •

    $default  reduce using rule 28 (expression)


State 77

   25 expression: expression • ADD expression
   26           | expression • SUBTRACT expression
   26           | expression SUBTRACT expression •
   27           | expression • MULTIPLY expression
   28           | expression • DIVIDE expression

    MULTIPLY  shift, and go to state 58
    DIVIDE    shift, and go to state 59

    $default  reduce using rule 26 (expression)


State 78

   14 declaration: type ID '=' expression •
   25 expression: expression • ADD expression
   26           | expression • SUBTRACT expression
   27           | expression • MULTIPLY expression
   28           | expression • DIVIDE expression

    ADD       shift, and go to state 57
    MULTIPLY  shift, and go to state 58
    DIVIDE    shift, and go to state 59
    SUBTRACT  shift, and go to state 60

    $default  reduce using rule 14 (declaration)


State 79

   30 scan_stmt: SCANFF '(' STR ',' '&' • ID ')'

    ID  shift, and go to state 83


State 80

   31 for_loop: FOR '(' assignment ';' condition • ';' assignment ')' '{' body '}'

    ';'  shift, and go to state 84


State 81

   25 expression: expression • ADD expression
   26           | expression • SUBTRACT expression
   27           | expression • MULTIPLY expression
   28           | expression • DIVIDE expression
   35 condition: expression comp_op expression •

    ADD       shift, and go to state 57
    MULTIPLY  shift, and go to state 58
    DIVIDE    shift, and go to state 59
    SUBTRACT  shift, and go to state 60

    $default  reduce using rule 35 (condition)


State 82

   32 if_stmt: IF '(' condition ')' '{' • body '}' else_part

    $default  reduce using rule 5 (body)

    body  go to state 85


State 83

   30 scan_stmt: SCANFF '(' STR ',' '&' ID • ')'

    ')'  shift, and go to state 86


State 84

   31 for_loop: FOR '(' assignment ';' condition ';' • assignment ')' '{' body '}'

    ID     shift, and go to state 19
    UNARY  shift, and go to state 20

    assignment  go to state 87


State 85

    6 body: body • statement
   32 if_stmt: IF '(' condition ')' '{' body • '}' else_part

    PRINTFF  shift, and go to state 12
    SCANFF   shift, and go to state 13
    INT      shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    FOR      shift, and go to state 17
    IF       shift, and go to state 18
    ID       shift, and go to state 19
    UNARY    shift, and go to state 20
    '}'      shift, and go to state 88

    statement    go to state 22
    declaration  go to state 23
    type         go to state 24
    assignment   go to state 25
    print_stmt   go to state 26
    scan_stmt    go to state 27
    for_loop     go to state 28
    if_stmt      go to state 29


State 86

   30 scan_stmt: SCANFF '(' STR ',' '&' ID ')' •

    $default  reduce using rule 30 (scan_stmt)


State 87

   31 for_loop: FOR '(' assignment ';' condition ';' assignment • ')' '{' body '}'

    ')'  shift, and go to state 89


State 88

   32 if_stmt: IF '(' condition ')' '{' body '}' • else_part

    ELSE  shift, and go to state 90

    $default  reduce using rule 33 (else_part)

    else_part  go to state 91


State 89

   31 for_loop: FOR '(' assignment ';' condition ';' assignment ')' • '{' body '}'

    '{'  shift, and go to state 92


State 90

   34 else_part: ELSE • '{' body '}'

    '{'  shift, and go to state 93


State 91

   32 if_stmt: IF '(' condition ')' '{' body '}' else_part •

    $default  reduce using rule 32 (if_stmt)


State 92

   31 for_loop: FOR '(' assignment ';' condition ';' assignment ')' '{' • body '}'

    $default  reduce using rule 5 (body)

    body  go to state 94


State 93

   34 else_part: ELSE '{' • body '}'

    $default  reduce using rule 5 (body)

    body  go to state 95


State 94

    6 body: body • statement
   31 for_loop: FOR '(' assignment ';' condition ';' assignment ')' '{' body • '}'

    PRINTFF  shift, and go to state 12
    SCANFF   shift, and go to state 13
    INT      shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    FOR      shift, and go to state 17
    IF       shift, and go to state 18
    ID       shift, and go to state 19
    UNARY    shift, and go to state 20
    '}'      shift, and go to state 96

    statement    go to state 22
    declaration  go to state 23
    type         go to state 24
    assignment   go to state 25
    print_stmt   go to state 26
    scan_stmt    go to state 27
    for_loop     go to state 28
    if_stmt      go to state 29


State 95

    6 body: body • statement
   34 else_part: ELSE '{' body • '}'

    PRINTFF  shift, and go to state 12
    SCANFF   shift, and go to state 13
    INT      shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    FOR      shift, and go to state 17
    IF       shift, and go to state 18
    ID       shift, and go to state 19
    UNARY    shift, and go to state 20
    '}'      shift, and go to state 97

    statement    go to state 22
    declaration  go to state 23
    type         go to state 24
    assignment   go to state 25
    print_stmt   go to state 26
    scan_stmt    go to state 27
    for_loop     go to state 28
    if_stmt      go to state 29


State 96

   31 for_loop: FOR '(' assignment ';' condition ';' assignment ')' '{' body '}' •

    $default  reduce using rule 31 (for_loop)


State 97

   34 else_part: ELSE '{' body '}' •

    $default  reduce using rule 34 (else_part)
